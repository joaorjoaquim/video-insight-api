---
description: 
globs: 
alwaysApply: false
---
# Environment Variables Reference

Este documento lista todas as vari√°veis de ambiente dispon√≠veis no projeto, baseadas no arquivo `env.example`.

## üöÄ Server Configuration

### `PORT`
- **Descri√ß√£o**: Porta na qual o servidor ser√° executado
- **Tipo**: Number
- **Padr√£o**: `5000`
- **Exemplo**: `PORT=5000`

### `NODE_ENV`
- **Descri√ß√£o**: Ambiente de execu√ß√£o da aplica√ß√£o
- **Tipo**: String
- **Valores**: `development`, `production`, `homolog`
- **Padr√£o**: `development`
- **Exemplo**: `NODE_ENV=development`

## üóÑÔ∏è Database Configuration

O projeto suporta duas formas de configura√ß√£o de banco de dados:

### Op√ß√£o 1: URLs Completas (Recomendado)

#### `DATABASE_URL_WRITE`
- **Descri√ß√£o**: URL completa para conex√£o de escrita no banco
- **Tipo**: String
- **Formato**: `postgres://user:password@host:port/database`
- **Exemplo**: `DATABASE_URL_WRITE=postgres://user:password@localhost:5432/mydb`

#### `DATABASE_URL_READ`
- **Descri√ß√£o**: URL completa para conex√£o de leitura no banco
- **Tipo**: String
- **Formato**: `postgres://user:password@host:port/database`
- **Padr√£o**: Usa a mesma configura√ß√£o do `DATABASE_URL_WRITE`
- **Exemplo**: `DATABASE_URL_READ=postgres://user:password@localhost:5432/mydb`

### Op√ß√£o 2: Vari√°veis Individuais

#### `DB_HOST`
- **Descri√ß√£o**: Host do servidor PostgreSQL
- **Tipo**: String
- **Padr√£o**: `localhost`
- **Exemplo**: `DB_HOST=localhost`

#### `DB_PORT`
- **Descri√ß√£o**: Porta do servidor PostgreSQL
- **Tipo**: Number
- **Padr√£o**: `5432`
- **Exemplo**: `DB_PORT=5432`

#### `DB_USER`
- **Descri√ß√£o**: Nome de usu√°rio para autentica√ß√£o no banco
- **Tipo**: String
- **Padr√£o**: `root`
- **Exemplo**: `DB_USER=postgres`

#### `DB_PASSWORD`
- **Descri√ß√£o**: Senha para autentica√ß√£o no banco
- **Tipo**: String
- **Padr√£o**: `''` (vazio)
- **Exemplo**: `DB_PASSWORD=mypassword`

#### `DB_NAME`
- **Descri√ß√£o**: Nome do banco de dados
- **Tipo**: String
- **Padr√£o**: `test`
- **Exemplo**: `DB_NAME=alertapx`

### Configura√ß√µes Avan√ßadas de Banco

#### `DB_SSL`
- **Descri√ß√£o**: Habilita SSL para conex√£o com banco
- **Tipo**: Boolean
- **Valores**: `true`, `false`
- **Padr√£o**: `false`
- **Exemplo**: `DB_SSL=true`

#### `DB_MAX_CONNECTION`
- **Descri√ß√£o**: N√∫mero m√°ximo de conex√µes simult√¢neas no pool
- **Tipo**: Number
- **Padr√£o**: `10`
- **Exemplo**: `DB_MAX_CONNECTION=20`

## üîí Security & Authentication

### `JWT_SECRET`
- **Descri√ß√£o**: Chave secreta para assinatura de tokens JWT
- **Tipo**: String
- **Obrigat√≥rio**: Sim
- **Recomenda√ß√£o**: Use uma string longa e aleat√≥ria
- **Exemplo**: `JWT_SECRET=your-super-secret-jwt-key-here-make-it-long-and-random`

### `API_SECRET_KEY`
- **Descri√ß√£o**: Chave secreta adicional para seguran√ßa da API
- **Tipo**: String
- **Exemplo**: `API_SECRET_KEY=your-api-secret-key-for-additional-security`

## üë§ Clerk Integration (Authentication Service)

### `CLERK_SECRET_KEY`
- **Descri√ß√£o**: Chave secreta do Clerk para autentica√ß√£o
- **Tipo**: String
- **Formato**: Come√ßa com `sk_test_` ou `sk_live_`
- **Exemplo**: `CLERK_SECRET_KEY=sk_test_axRZs6wiWtDDUYuJDXIc8GsZLpF2zQkzMXdC3hyHQY`

### `CLERK_WEBHOOK_SECRET`
- **Descri√ß√£o**: Segredo para valida√ß√£o de webhooks do Clerk
- **Tipo**: String
- **Formato**: Come√ßa com `whsec_`
- **Exemplo**: `CLERK_WEBHOOK_SECRET=whsec_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`

### `CLERK_PUBLISHABLE_KEY`
- **Descri√ß√£o**: Chave p√∫blica do Clerk para frontend
- **Tipo**: String
- **Formato**: Come√ßa com `pk_test_` ou `pk_live_`
- **Exemplo**: `CLERK_PUBLISHABLE_KEY=pk_test_Y3VyaW91cy1taW5rLTQ3LmNsZXJrLmFjY291bnRzLmRldiQ`

## üîÑ Redis & Caching

### `REDIS_URL`
- **Descri√ß√£o**: URL de conex√£o com Redis para cache geral
- **Tipo**: String
- **Formato**: `redis://host:port`
- **Exemplo**: `REDIS_URL=redis://localhost:6379`

### `RATE_LIMIT_REDIS_URL`
- **Descri√ß√£o**: URL de conex√£o com Redis para rate limiting
- **Tipo**: String
- **Formato**: `redis://host:port`
- **Exemplo**: `RATE_LIMIT_REDIS_URL=redis://localhost:6379`

### `UPSTASH_REDIS_REST_URL`
- **Descri√ß√£o**: URL REST da Upstash Redis (servi√ßo gerenciado)
- **Tipo**: String
- **Exemplo**: `UPSTASH_REDIS_REST_URL=https://your-redis.upstash.io`

### `UPSTASH_REDIS_REST_TOKEN`
- **Descri√ß√£o**: Token de autentica√ß√£o para Upstash Redis
- **Tipo**: String
- **Exemplo**: `UPSTASH_REDIS_REST_TOKEN=your-token-here`

## ‚òÅÔ∏è AWS Services (Optional)

### `AWS_REGION`
- **Descri√ß√£o**: Regi√£o AWS para servi√ßos da AWS
- **Tipo**: String
- **Exemplo**: `AWS_REGION=us-east-1`

### `AWS_ACCESS_KEY_ID`
- **Descri√ß√£o**: ID da chave de acesso AWS
- **Tipo**: String
- **Exemplo**: `AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE`

### `AWS_SECRET_ACCESS_KEY`
- **Descri√ß√£o**: Chave secreta de acesso AWS
- **Tipo**: String
- **Exemplo**: `AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`

## üí≥ Stripe Integration (Payment Processing)

### `STRIPE_SECRET_KEY`
- **Descri√ß√£o**: Chave secreta do Stripe para processamento de pagamentos
- **Tipo**: String
- **Formato**: Come√ßa com `sk_test_` ou `sk_live_`
- **Exemplo**: `STRIPE_SECRET_KEY=sk_test_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`

### `STRIPE_WEBHOOK_SECRET`
- **Descri√ß√£o**: Segredo para valida√ß√£o de webhooks do Stripe
- **Tipo**: String
- **Formato**: Come√ßa com `whsec_`
- **Exemplo**: `STRIPE_WEBHOOK_SECRET=whsec_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`

## üìä Logging

### `LOG_LEVEL`
- **Descri√ß√£o**: N√≠vel de logging da aplica√ß√£o
- **Tipo**: String
- **Valores**: `debug`, `info`, `warn`, `error`
- **Padr√£o**: `info`
- **Exemplo**: `LOG_LEVEL=info`

### `APP_NAME`
- **Descri√ß√£o**: Nome da aplica√ß√£o usado nos logs
- **Tipo**: String
- **Padr√£o**: `api`
- **Exemplo**: `APP_NAME=alertapx-api`

## üåê CORS Configuration

### `CORS_ORIGIN`
- **Descri√ß√£o**: Origins permitidas para requisi√ß√µes CORS
- **Tipo**: String (separado por v√≠rgula)
- **Formato**: Lista de URLs separadas por v√≠rgula
- **Exemplo**: `CORS_ORIGIN=http://localhost:3000,https://yourdomain.com`

## üìã Setup Checklist

### Vari√°veis Obrigat√≥rias
- [ ] `PORT`
- [ ] `NODE_ENV`
- [ ] `JWT_SECRET`
- [ ] Configura√ß√£o de banco (URLs ou vari√°veis individuais)

### Vari√°veis Opcionais
- [ ] `REDIS_URL` (para cache)
- [ ] `CLERK_*` (se usando Clerk)
- [ ] `STRIPE_*` (se usando Stripe)
- [ ] `AWS_*` (se usando AWS)
- [ ] `CORS_ORIGIN` (para frontend)

### Exemplo de .env M√≠nimo
```bash
PORT=5000
NODE_ENV=development
JWT_SECRET=your-super-secret-jwt-key-here-make-it-long-and-random
DATABASE_URL_WRITE=postgres://user:password@localhost:5432/alertapx
CORS_ORIGIN=http://localhost:3000
```
