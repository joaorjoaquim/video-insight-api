version: '3.8'

services:
  api:
    build: .
    container_name: video-insight-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=video_insight
      - REDIS_URL=redis://redis:6379
      # Add other env vars as needed (OPENAI_API_KEY, JWT_SECRET, etc)
    ports:
      - '3000:3000'
    depends_on:
      - postgres
      - redis
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/healthcheck',
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    container_name: video-insight-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: video_insight
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: video-insight-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: video-insight-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '8080:80'
    depends_on:
      - postgres
    networks:
      - backend
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  pgdata:
  redisdata:
  pgadmin_data:

networks:
  backend:
    driver: bridge
